{"version":3,"sources":["components/elements/Header/Header.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/Spinner/Spinner.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","config.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","src","alt","Component","HeroImage","props","pathname","movieId","movieName","title","style","background","image","text","SearchBar","state","value","timeout","onChange","event","setState","target","clearTimeout","setTimeout","callback","name","size","type","placeholder","this","FourColGrid","header","loading","children","map","movie","i","key","prototype","PropTypes","string","bool","MovieThumb","clickable","Spinner","LoadMoreBtn","onClick","API_URL","API_KEY","IMAGE_BASE_URL","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","res","json","data","ranNum","Math","floor","random","results","page","total_pages","localStorage","setItem","JSON","stringify","catch","err","console","error","getItem","parse","backdrop_path","original_title","overview","id","poster_path","Navigation","MovieInfo","min","max","optimum","low","high","vote_average","directors","length","director","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","status_code","match","params","crew","filter","member","job","cast","location","runtime","color","textAlign","NotFound","App","Fragment","path","component","exact","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.30bda57c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-header\">\r\n        <div className=\"rmdb-header-content\">\r\n          <Link to=\"/\">\r\n            <img\r\n              className=\"rmdb-logo\"\r\n              src=\"./images/reactMovie_logo.png\"\r\n              alt=\"rmdb-log\"\r\n            />\r\n          </Link>\r\n          <img\r\n            className=\"rmdb-tmdb-logo\"\r\n            src=\"./images/tmdb_logo.png\"\r\n            alt=\"tmdb-log\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./HeroImage.css\";\r\n\r\nfunction HeroImage(props) {\r\n  return (\r\n    <Link to={{ pathname: `${props.movieId}`, movieName: `${props.title}` }}>\r\n      <div\r\n        className=\"rmdb-heroimage\"\r\n        style={{\r\n          background: `linear-gradient(to bottom, rgba(0,0,0,0.3)\r\n        39%, rgba(0,0,0,0.35)\r\n        41%, rgba(0,0,0,0.65)\r\n        100%),\r\n        url('${props.image}'), #1c1c1c`,\r\n        }}\r\n      >\r\n        <div className=\"rmdb-heroimage-content\">\r\n          <div className=\"rmdb-heroimage-text\">\r\n            <h1>{props.title}</h1>\r\n            <p>{props.text}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nexport default HeroImage;\r\n","import React, { Component } from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport \"./SearchBar.css\";\r\n\r\nexport class SearchBar extends Component {\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  timeout = null;\r\n  onChange = (event) => {\r\n    this.setState({\r\n      value: event.target.value,\r\n    });\r\n\r\n    clearTimeout(this.timeout);\r\n    this.timeout = setTimeout(() => {\r\n      this.props.callback(this.state.value);\r\n    }, 500);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-searchbar\">\r\n        <div className=\"rmdb-searchbar-content\">\r\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n          <input\r\n            type=\"text\"\r\n            className=\"rmdb-searchbar-input\"\r\n            placeholder=\"Search\"\r\n            onChange={this.onChange}\r\n            value={this.state.value}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./FourColGrid.css\";\r\n\r\nfunction FourColGrid(props) {\r\n  const renderMovies = () => {\r\n    const gridMovies = props.children.map((movie, i) => {\r\n      return (\r\n        <div key={i} className=\"rmdb-grid-element\">\r\n          {movie}\r\n        </div>\r\n      );\r\n    });\r\n    return gridMovies;\r\n  };\r\n\r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n      <div className=\"rmdb-grid-content\">{renderMovies()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nFourColGrid.prototype = {\r\n  header: PropTypes.string,\r\n  loading: PropTypes.bool,\r\n};\r\n\r\nexport default FourColGrid;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./MovieThumb.css\";\r\n\r\nfunction MovieThumb(props) {\r\n  return (\r\n    <div className=\"rmdb-moviethumb\">\r\n      {props.clickable ? (\r\n        <Link\r\n          to={{\r\n            pathname: `/${props.movieId}`,\r\n            movieName: `${props.movieName}`,\r\n          }}\r\n        >\r\n          <img src={props.image} alt=\"MovieThumb\" />\r\n        </Link>\r\n      ) : (\r\n        <img src={props.image} alt=\"MovieThumb\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  movieName: PropTypes.string,\r\n};\r\n\r\nexport default MovieThumb;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nfunction Spinner() {\r\n  return <div className=\"loader\"></div>;\r\n}\r\n\r\nexport default Spinner;\r\n","import React from \"react\";\r\nimport \"./LoadMoreBtn.css\";\r\n\r\nfunction LoadMoreBtn(props) {\r\n  return (\r\n    <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoadMoreBtn;\r\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\n//const My_API_URL =  \"https://api.themoviedb.org/3/movie/550?api_key=da6f320ef41de6e44cc5c9d42ba94b3a\";\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"da6f320ef41de6e44cc5c9d42ba94b3a\";\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n// https://image.tmdb.org/t/p/original/aTWWfOZU2uGvFACBtJzsqsKvwea.jpg\n\nconst IMAGE_BASE_URL = \"http://image.tmdb.org/t/p/\";\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w500\";\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import React, { Component } from \"react\";\r\nimport \"./Home.css\";\r\n\r\n// Components Imports\r\nimport HeroImage from \"../elements/HeroImage/HeroImage\";\r\nimport SearchBar from \"../elements/SearchBar/SearchBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\nimport MovieThumb from \"../elements/MovieThumb/MovieThumb\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport LoadMoreBtn from \"../elements/LoadMoreBtn/LoadMoreBtn\";\r\n\r\n// Movie Api Imports\r\nimport {\r\n  API_URL,\r\n  API_KEY,\r\n  IMAGE_BASE_URL,\r\n  BACKDROP_SIZE,\r\n  POSTER_SIZE,\r\n} from \"../../config\";\r\n\r\nexport class Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Check localStorage\r\n    if (localStorage.getItem(\"HomeState\")) {\r\n      const state = JSON.parse(localStorage.getItem(\"HomeState\"));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n\r\n      // Fetch the popular movies\r\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  searchItems = (searchTerm) => {\r\n    let endpoint = \"\";\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm: searchTerm,\r\n    });\r\n\r\n    if (searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${this.state.searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  loadMoreItems = () => {\r\n    let endpoint = \"\";\r\n    this.setState({ loading: true });\r\n    if (this.state.searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${\r\n        this.state.currentPage + 1\r\n      }`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${\r\n        this.state.searchTerm\r\n      }&page=${this.state.currentPage + 1}`;\r\n    }\r\n\r\n    this.fetchItems(endpoint);\r\n  };\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // random number 1:10 of the popular movies\r\n        const ranNum = Math.floor(Math.random() * 10) + 1;\r\n        this.setState(\r\n          {\r\n            // set the movies to the state\r\n            movies: [...this.state.movies, ...data.results],\r\n            heroImage: this.state.heroImage || data.results[ranNum],\r\n            loading: false,\r\n            currentPage: data.page,\r\n            totalPages: data.total_pages,\r\n          },\r\n          () => {\r\n            // Set the localStorage\r\n            if (this.state.searchTerm === \"\") {\r\n              localStorage.setItem(\"HomeState\", JSON.stringify(this.state));\r\n            }\r\n          }\r\n        );\r\n      })\r\n      .catch((err) => console.error(\"Error: \", err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-home\">\r\n        {this.state.heroImage ? (\r\n          <div>\r\n            <HeroImage\r\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\r\n              title={this.state.heroImage.original_title}\r\n              text={this.state.heroImage.overview}\r\n              movieId={this.state.heroImage.id}\r\n            />\r\n            <SearchBar callback={this.searchItems} />\r\n          </div>\r\n        ) : null}\r\n        <div className=\"rmdb-home-grid\">\r\n          <FourColGrid\r\n            header={this.state.searchTerm ? \"Search Results\" : \"Popular Movies\"}\r\n            loading={this.state.loading}\r\n          >\r\n            {this.state.movies.map((movie, i) => {\r\n              return (\r\n                <MovieThumb\r\n                  key={i}\r\n                  clickable={true}\r\n                  image={\r\n                    movie.poster_path\r\n                      ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n                      : \"./images/no_image.jpg\"\r\n                  }\r\n                  movieId={movie.id}\r\n                  movieName={movie.original_title}\r\n                />\r\n              );\r\n            })}\r\n          </FourColGrid>\r\n        </div>\r\n        {this.state.loading ? <Spinner /> : null}\r\n        {this.state.currentPage < this.state.totalPages &&\r\n        !this.state.loading ? (\r\n          <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\nfunction Navigation(props) {\r\n  return (\r\n    <div className=\"rmdb-navigation\">\r\n      <div className=\"rmdb-navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>/</p>\r\n        <p>{props.movie}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\r\nimport \"./MovieInfo.css\";\r\n\r\nfunction MovieInfo(props) {\r\n  return (\r\n    <div\r\n      className=\"rmdb-movieinfo\"\r\n      style={{\r\n        background: props.movie.backdrop_path\r\n          ? `url('${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.backdrop_path}')`\r\n          : \"#000\",\r\n      }}\r\n    >\r\n      <div className=\"rmdb-movieinfo-content\">\r\n        <div className=\"rmdb-movieinfo-thumb\">\r\n          <MovieThumb\r\n            image={\r\n              props.movie.poster_path\r\n                ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.movie.poster_path}`\r\n                : \"./images/no_image.jpg\"\r\n            }\r\n            clickable={false}\r\n          />\r\n        </div>\r\n        <div className=\"rmdb-movieinfo-text\">\r\n          <h1>{props.movie.title}</h1>\r\n          <h3>PLOT</h3>\r\n          <p>{props.movie.overview}</p>\r\n          <h3>IMDB Rating</h3>\r\n          <div className=\"rmdb-rating\">\r\n            <meter\r\n              min=\"0\"\r\n              max=\"100\"\r\n              optimum=\"100\"\r\n              low=\"40\"\r\n              high=\"70\"\r\n              value={props.movie.vote_average * 10}\r\n            ></meter>\r\n            <p className=\"rmdb-score\">{props.movie.vote_average}</p>\r\n            <FontAwesome className=\"fa-star\" name=\"star\" />\r\n          </div>\r\n          {props.directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n          {props.directors.map((director, i) => {\r\n            return (\r\n              <p key={i} className=\"rmdb-director\">\r\n                {director.name}\r\n              </p>\r\n            );\r\n          })}\r\n        </div>\r\n        <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n}\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n}","import React from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport { calcTime, convertMoney } from \"../../../helpers\";\r\nimport \"./MovieInfoBar.css\";\r\n\r\nfunction MovieInfoBar(props) {\r\n  return (\r\n    <div className=\"rmdb-movieinfobar\">\r\n      <div className=\"rmdb-movieinfobar-content\">\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-time\" name=\"colock-o\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Running Time : {calcTime(props.time)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Budget : {convertMoney(props.budget)}\r\n          </span>\r\n        </div>\r\n        <div className=\"rmdb-movieinfobar-content-col\">\r\n          <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n          <span className=\"rmdb-movieinfobar-info\">\r\n            Revenue : {convertMoney(props.revenue)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieInfoBar;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL } from \"../../../config\";\r\nimport \"./Actor.css\";\r\n\r\nfunction Actor(props) {\r\n  const POSTER_SIZE = \"w154\";\r\n\r\n  return (\r\n    <div className=\"rmdb-actor\">\r\n      <img\r\n        src={\r\n          props.actor.profile_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\r\n            : \"./images/no_image.jpg\"\r\n        }\r\n        alt=\"actorthumb\"\r\n      />\r\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n      <span className=\"rmdb-actor-character\">\r\n        Character : {props.actor.character}\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Actor;\r\n","import React, { Component } from \"react\";\r\nimport \"./Movie.css\";\r\n\r\n// movie page imports\r\nimport { API_KEY, API_URL } from \"../../config\";\r\nimport Navigation from \"../elements/Navigation/Navigation\";\r\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\r\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid\";\r\n// import MovieThumb from \"../elements/MovieThumb/MovieThumb\";\r\nimport Actor from \"../elements/Actor/Actor\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\n\r\nexport class Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    // check the movie in the localstorage\r\n    if (\r\n      localStorage.getItem(\r\n        `${this.props.location.movieName} - ${this.props.match.params.movieId}`\r\n      )\r\n    ) {\r\n      const state = JSON.parse(\r\n        localStorage.getItem(\r\n          `${this.props.location.movieName} - ${this.props.match.params.movieId}`\r\n        )\r\n      );\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      // fetch the movie\r\n      const endpoint = `${API_URL}movie/${this.props.match.params.movieId}?api_key=${API_KEY}&language=en-US`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.status_code) {\r\n          this.setState({ loading: false });\r\n        } else {\r\n          this.setState({ movie: data }, () => {\r\n            // fetch the actors from the set state call back function\r\n            const endpoint = `${API_URL}movie/${this.props.match.params.movieId}/credits?api_key=${API_KEY}`;\r\n            fetch(endpoint)\r\n              .then((res) => res.json())\r\n              .then((data) => {\r\n                const directors = data.crew.filter(\r\n                  (member) => member.job === \"Director\"\r\n                );\r\n                this.setState(\r\n                  {\r\n                    actors: data.cast,\r\n                    directors: directors,\r\n                    loading: false,\r\n                  },\r\n                  () => {\r\n                    // set the movie to localStorage\r\n                    localStorage.setItem(\r\n                      `${this.props.location.movieName} - ${this.props.match.params.movieId}`,\r\n                      JSON.stringify(this.state)\r\n                    );\r\n                  }\r\n                );\r\n              });\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => console.error(\"Error\", err));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {this.state.movie ? (\r\n          <div>\r\n            <Navigation movie={this.props.location.movieName} />\r\n            <MovieInfo\r\n              movie={this.state.movie}\r\n              directors={this.state.directors}\r\n            />\r\n            <MovieInfoBar\r\n              time={this.state.movie.runtime}\r\n              budget={this.state.movie.budget}\r\n              revenue={this.state.movie.revenue}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {this.state.actors ? (\r\n          <FourColGrid header={\"Actors\"}>\r\n            {this.state.actors.map((actor, i) => {\r\n              return <Actor key={i} actor={actor} />;\r\n            })}\r\n          </FourColGrid>\r\n        ) : null}\r\n        {!this.state.actors && !this.state.loading ? (\r\n          <h1 style={{ color: \"red\", textAlign: \"center\" }}>\r\n            Movie Not Found !!\r\n          </h1>\r\n        ) : null}\r\n        {this.state.loading ? <Spinner /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 style={{ color: \"red\", textAlign: \"center\" }}>\r\n        Whooops !! This Page is NOT Exist !!\r\n      </h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Header from \"./components/elements/Header/Header\";\nimport Home from \"./components/Home/Home\";\nimport Movie from \"./components/Movie/Movie\";\nimport NotFound from \"./components/elements/NotFound/NotFound\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <React.Fragment>\n        <Header />\n        <Switch>\n          <Route path=\"/\" component={Home} exact />\n          <Route path=\"/:movieId\" component={Movie} />\n          <Route component={NotFound} />\n        </Switch>\n      </React.Fragment>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}